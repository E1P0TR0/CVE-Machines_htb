#!/usr/bin/python3

import signal, sys, subprocess, shlex
from pwn import *
import time

# ctrl + c
def signal_handler(signum, frame):
    print("\n[-] Exiting..."); sys.exit()

signal.signal(signal.SIGINT, signal_handler)

# help panel
def help():
    print("[!] Do not forget to install the requirements;   Example: sudo ./requirements.sh\n")
    log.info(f"Use: {sys.argv[0]} <file with backdoor data>;    Example: convertPass.py auth_password.c"); sys.exit()

# valid args
if len(sys.argv) != 2: help()

# read file
def readFile():
    p = log.progress('Extracting data from the file')
    name_file = "extractAndSort.sh"
    subprocess.run(shlex.split(f"chmod +x {name_file}"))
    output = subprocess.run(shlex.split(f"./{name_file} {sys.argv[1]}"), capture_output=True, text=True)
    time.sleep(2)
    p.status('Success!')
    return output.stdout.strip().replace(" ","")

# little-endian to big_endian
def littleToBig(data_litt):
    p = log.progress('Swaping endianndess')
    sections = 2
    data_litt = [data_litt[i : i + sections] for i in range(0, len(data_litt), sections)]
    data_litt = [i for i in data_litt if i != "0x"]
    time.sleep(2)
    p.status('Success!')
    return data_litt[::-1]

# hex to ascii
def hexToAscii(data_big):
    p = log.progress('Converting hexadecimal to ascii data')
    password = [chr(int(f"0x{i}", base=16) ^ 0x96) for i in data_big]
    time.sleep(2)
    p.status('Success!\n')
    return ''.join(password)

# process
def run():
    data_litt = readFile()
    time.sleep(1)
    data_big = littleToBig(data_litt)
    time.sleep(1)
    password = hexToAscii(data_big)
    time.sleep(1)
    p = log.progress('Password')
    p.success(password)

# main
if __name__ == '__main__':
    run()
